
name: Release with SBOM and Provenance attestation

on:
  push:
    tags:
      - 'v*'
env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    
    strategy:
      matrix:
        service:
          - name: auth
            dockerfile: docker/auth.Dockerfile
            context: 
          - name: auth-ext
            dockerfile: docker/auth-ext.Dockerfile
            context: .
          - name: frontend
            dockerfile: docker/frontend.Dockerfile
            context: .
          - name: gallery
            dockerfile: docker/gallery.Dockerfile
            context: .
          - name: storage
            dockerfile: docker/storage.Dockerfile
            context: .
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate SBOM for built image
        uses: anchore/sbom-action@v0.20.5
        with:
          image: ${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}@${{ steps.push.outputs.digest }}
          format: cyclonedx-json
          output-file: ${{ matrix.service.name }}-sbom.cdx.json
          upload-artifact: false
          upload-release-assets: false


      - name: Attest SBOM
        uses: actions/attest-sbom@v3
        with:
          subject-name: ${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          sbom-path: ${{ matrix.service.name }}-sbom.cdx.json
          push-to-registry: true

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service.name }}-sbom-${{ github.run_id }}
          path: ${{ matrix.service.name }}-sbom.cdx.json
